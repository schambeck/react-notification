{"version":3,"sources":["HomeScreen.tsx","NotificationScreen.tsx","App.tsx"],"names":["HomeScreen","navigation","Button","title","onPress","navigate","NotificationScreen","route","useState","isLoading","setLoading","data","setData","selectedId","setSelectedId","useEffect","a","async","fetch","method","headers","Accept","response","json","console","error","getNotifications","SafeAreaView","style","styles","container","ActivityIndicator","size","color","FlatList","renderItem","item","backgroundColor","id","textColor","keyExtractor","extraData","Item","TouchableOpacity","Text","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal","fontSize","Stack","createNativeStackNavigator","NavigationContainer","Navigator","Screen","name","component","Home","options","Notification"],"mappings":"mIAGaA,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3B,OACE,cAACC,EAAA,EAAD,CACEC,MAAM,qBACNC,QAAS,kBAAMH,EAAWI,SAAS,wB,2FCJ5BC,EAAqB,SAAC,GAA0B,EAAxBL,WAAwB,EAAZM,MAAa,IAC5D,EAAgCC,oBAAS,GAAzC,WAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,WAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAS,MAA7C,WAAOK,EAAP,KAAmBC,EAAnB,KAoBAC,qBAAU,YAlBe,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEEE,MAAM,gFAAiF,CAC5GC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,cAAiB,66BANA,cAEfC,EAFe,kBAAAN,EAAA,MASFM,EAASC,QATP,OASfA,EATe,OAUrBX,EAAQW,GAVa,kDAYrBC,QAAQC,MAAR,MAZqB,yBAcrBf,GAAW,GAdU,oFAmBvBgB,KACC,IAgBH,OACE,cAACC,EAAA,EAAD,CAAcC,MAAOC,EAAOC,UAA5B,SACGrB,EAAY,cAACsB,EAAA,EAAD,CAAmBC,KAAK,QAAQC,MAAM,YACjD,cAACC,EAAA,EAAD,CACEvB,KAAMA,EACNwB,WAnBW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAkBD,EAAKE,KAAOzB,EAAa,UAAY,UACvDoB,EAAQG,EAAKE,KAAOzB,EAAa,QAAU,QAEjD,OACE,cAAC,EAAD,CACEuB,KAAMA,EACNhC,QAAS,kBAAMU,EAAcsB,EAAKE,KAClCD,gBAAiB,CAAEA,mBACnBE,UAAW,CAAEN,YAWXO,aAAc,SAACJ,GAAD,OAAUA,EAAKE,IAC7BG,UAAW5B,OAOf6B,EAAO,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMhC,EAAT,EAASA,QAASiC,EAAlB,EAAkBA,gBAAiBE,EAAnC,EAAmCA,UAAnC,OACX,cAACI,EAAA,EAAD,CAAkBvC,QAASA,EAASwB,MAAO,CAACC,EAAOO,KAAMC,GAAzD,SACE,cAACO,EAAA,EAAD,CAAMhB,MAAO,CAACC,EAAO1B,MAAOoC,GAA5B,SAAyCH,EAAKE,QAI5CT,EAASgB,IAAWC,OAAO,CAC/BhB,UAAW,CACTiB,KAAM,EACNC,UAAWC,IAAUC,eAAiB,GAExCd,KAAM,CACJe,QAAS,GACTC,eAAgB,EAChBC,iBAAkB,IAEpBlD,MAAO,CACLmD,SAAU,MCrEC,eACb,IAAMC,EAAQC,cAEd,OACE,cAACC,EAAA,EAAD,UACE,eAACF,EAAMG,UAAP,WACE,cAACH,EAAMI,OAAP,CAAcC,KAAK,OAAOC,UAAWC,EAAiBC,QAAS,CAAE5D,MAAO,aACxE,cAACoD,EAAMI,OAAP,CAAcC,KAAK,mBAAmBC,UAAWG,W","file":"static/js/app.ebdd0b1c.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-native';\n\nexport const HomeScreen = ({ navigation }) => {\n  return (\n    <Button\n      title=\"Notifications List\"\n      onPress={() => navigation.navigate('NotificationList')}\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, TouchableOpacity, StyleSheet, SafeAreaView, StatusBar } from 'react-native';\n\nexport const NotificationScreen = ({ navigation, route }) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const getNotifications = async () => {\n    try {\n      const response = await fetch('https://sch-api-notification.herokuapp.com/notifications/queries/find-by-user', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkJCZjlwWnlFamQyTzlVQXVWNjJtTSJ9.eyJpc3MiOiJodHRwczovL2Rldi1sdWc5dWc0bi51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDkwOTQ5OTQ4NTYwMzU1MjEyOTQiLCJhdWQiOlsiaHR0cDovL2RuYS1zY2hhbWJlY2suaGVyb2t1YXBwLmNvbSIsImh0dHBzOi8vZGV2LWx1Zzl1ZzRuLnVzLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE2NDcxNDU1MTcsImV4cCI6MTY0NzIzMTkxNywiYXpwIjoiZUtjNUk1MWptNERJMFJrNElxblVpb0pBdE9yQTU0MEgiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIHJlYWQ6c3RhdHMgY3JlYXRlOm11dGFudCBsaXN0Om11dGFudCIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTptdXRhbnQiLCJsaXN0Om11dGFudCIsInJlYWQ6c3RhdHMiXX0.SDSuEponOsCX2v2KkY7useaWTvaq2YeYPDFv4u89A5gPvjH3mfLRrZYmnOPW9k0IWAbJhVXhikIwI1nNPDqnX9JB3rQCnMREpQUJy2jBJQk-FYDc4C_p7Fi97E4lmssu1wz21k33bDuIx9OG35HF9T8O1HdRSomksTxdwd5go6VMD-0VHb7XV-wPoNmw2WqLi_kBjQ1B996b14TCw7BzywkZFw4z7xBbqSZXdVYCEApVx8c8nm62bSeQnXAUs0VGM9cy0-6bT8UJwpzKtlqEntQmDCMD2rA9QmmZaaGbGHtW10vj4aYUMQ7ABYnK5jdwyBfHKnb-b0Ih9jrgiFf9vw'\n        }\n      });\n      const json = await response.json();\n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getNotifications();\n  }, []);\n\n  const renderItem = ({ item }) => {\n    const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    const color = item.id === selectedId ? 'white' : 'black';\n\n    return (\n      <Item\n        item={item}\n        onPress={() => setSelectedId(item.id)}\n        backgroundColor={{ backgroundColor }}\n        textColor={{ color }}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {isLoading ? <ActivityIndicator size=\"large\" color=\"#00ff00\" /> : (\n        <FlatList\n          data={data}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n          extraData={selectedId}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst Item = ({ item, onPress, backgroundColor, textColor }) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\n    <Text style={[styles.title, textColor]}>{item.id}</Text>\n  </TouchableOpacity>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  }\n});\n","import React, {  } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Home from './HomeScreen'\nimport * as Notification from './NotificationScreen'\n\nexport default () => {\n  const Stack = createNativeStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={Home.HomeScreen} options={{ title: 'Welcome' }} />\n        <Stack.Screen name=\"NotificationList\" component={Notification.NotificationScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n};\n"],"sourceRoot":""}